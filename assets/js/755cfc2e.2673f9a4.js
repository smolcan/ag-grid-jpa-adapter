"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[585],{595:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"pagination","title":"Pagination","description":"When using pagination for the grid, you need to provide the total row count through a separate request to the backend.","source":"@site/docs/pagination.md","sourceDirName":".","slug":"/pagination","permalink":"/ag-grid-jpa-adapter/pagination","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Pivoting","permalink":"/ag-grid-jpa-adapter/pivoting"}}');var o=t(4848),r=t(8453);const a={sidebar_position:8},s="Pagination",d={},c=[{value:"Paginate child rows",id:"paginate-child-rows",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"pagination",children:"Pagination"})}),"\n",(0,o.jsx)(n.p,{children:"When using pagination for the grid, you need to provide the total row count through a separate request to the backend."}),"\n",(0,o.jsx)(n.p,{children:"Only make this request when grid state changes in a way that affects the total count (like filter changes).\nFor grids with grouping enabled, only root groups are counted."}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.code,{children:"queryBuilder.countRows(request)"})," method to retrieve this count"]}),"\n",(0,o.jsx)(n.h2,{id:"paginate-child-rows",children:"Paginate child rows"}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"paginateChildRows=true"})," in ",(0,o.jsx)(n.code,{children:"QueryBuilder"})," to maintain exact page size. This makes ",(0,o.jsx)(n.code,{children:"queryBuilder.countRows(request)"}),"\ncount rows within expanded groups rather than number of root groups."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"QueryBuilder<Entity> queryBuilder = QueryBuilder.builder(Entity.class, entityManager)\n    .colDefs(...)\n    .paginateChildRows(true)\n    .build();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Note: When expanding groups in the frontend and ",(0,o.jsx)(n.code,{children:"paginateChildRows"})," is set to ",(0,o.jsx)(n.code,{children:"true"}),", you should also call count rows."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);