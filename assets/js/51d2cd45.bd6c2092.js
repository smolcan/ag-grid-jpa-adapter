"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[303],{6578:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>g,default:()=>c,frontMatter:()=>l,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"aggregation","title":"Aggregation","description":"Apply provided functions to values to calculate group values in the grid.","source":"@site/docs/aggregation.md","sourceDirName":".","slug":"/aggregation","permalink":"/ag-grid-jpa-adapter/aggregation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Row Grouping","permalink":"/ag-grid-jpa-adapter/row-grouping"},"next":{"title":"Pivoting","permalink":"/ag-grid-jpa-adapter/pivoting"}}');var t=i(4848),a=i(8453);const l={sidebar_position:6},g="Aggregation",o={},s=[{value:"Enabling Aggregation",id:"enabling-aggregation",level:2},{value:"Aggregation - Filtering",id:"aggregation---filtering",level:2},{value:"Ignore Filters when Aggregating",id:"ignore-filters-when-aggregating",level:3},{value:"Filtering for Aggregated Values",id:"filtering-for-aggregated-values",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"aggregation",children:"Aggregation"})}),"\n",(0,t.jsx)(n.p,{children:"Apply provided functions to values to calculate group values in the grid."}),"\n",(0,t.jsx)(n.h2,{id:"enabling-aggregation",children:"Enabling Aggregation"}),"\n",(0,t.jsxs)(n.p,{children:["To make column available for aggregation, set the ",(0,t.jsx)(n.code,{children:"enableValue"})," parameter to ",(0,t.jsx)(n.code,{children:"true"})," on ",(0,t.jsx)(n.code,{children:"ColDef"}),",\notherwise aggregation attempt on this column will result to runtime exception."]}),"\n",(0,t.jsxs)(n.p,{children:["To limit which aggregation functions (",(0,t.jsx)(n.a,{href:"https://github.com/smolcan/ag-grid-jpa-adapter/blob/main/src/main/java/io/github/smolcan/aggrid/jpa/adapter/request/AggregationFunction.java",children:"AggregationFunction"}),")\ncan be used on the column, provide array of allowed functions (otherwise all the aggregation functions are allowed.)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ColDef priceColumn = ColDef.builder()\n    .field("price")\n    .enableValue(true)\n    .allowedAggFuncs(AggregationFunction.avg, AggregationFunction.count)\n    .build();\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u26a0\ufe0f Disclaimer"}),"\nCurrently aggregation functions ",(0,t.jsx)(n.code,{children:"first"})," and ",(0,t.jsx)(n.code,{children:"last"})," are not supported in JPA. Using these functions will result in runtime exception.\nSupported functions are: ",(0,t.jsx)(n.code,{children:"avg"}),", ",(0,t.jsx)(n.code,{children:"sum"}),", ",(0,t.jsx)(n.code,{children:"min"}),", ",(0,t.jsx)(n.code,{children:"max"}),", ",(0,t.jsx)(n.code,{children:"count"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"aggregation---filtering",children:"Aggregation - Filtering"}),"\n",(0,t.jsx)(n.p,{children:"Filtering can be configured to impact aggregate values in the grid."}),"\n",(0,t.jsx)(n.h3,{id:"ignore-filters-when-aggregating",children:"Ignore Filters when Aggregating"}),"\n",(0,t.jsxs)(n.p,{children:["When using Filters and Aggregations together, the aggregated values reflect only the rows which have passed the filter.\nThis can be changed to instead ignore applied filters by using the ",(0,t.jsx)(n.code,{children:"suppressAggFilteredOnly"})," grid option."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"QueryBuilder<Entity> queryBuilder = QueryBuilder.builder(Entity.class, entityManager)\n    .colDefs(\n        // ...col defs\n    )\n    .suppressAggFilteredOnly(true)\n    .build();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"filtering-for-aggregated-values",children:"Filtering for Aggregated Values"}),"\n",(0,t.jsxs)(n.p,{children:["The grid only applies filters to leaf level rows, this can be toggled to instead also apply filtering to group rows by enabling the ",(0,t.jsx)(n.code,{children:"groupAggFiltering"})," grid option,\nallowing filters to also apply against the aggregated values."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"QueryBuilder<Entity> queryBuilder = QueryBuilder.builder(Entity.class, entityManager)\n    .colDefs(\n        // ...col defs\n    )\n    .groupAggFiltering(true)\n    .build();\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When a group row passes a filter, it also includes all of its descendent rows in the filtered results."}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"suppressAggFilteredOnly"})," grid option will be implicitly enabled."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>g});var r=i(6540);const t={},a=r.createContext(t);function l(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);